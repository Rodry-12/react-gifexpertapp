{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"+KAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACM,uBACEO,KAAO,OACPC,MAAST,EACTU,YAAc,WACdC,SAnBc,SAACR,GACvBF,EAAcE,EAAES,OAAOH,a,+BCPjBI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDAEyBC,UAAWH,GAFpC,+DAIDI,MAAMF,GAJL,cAIdG,EAJc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXlB,kBAgBbM,GAhBa,4CAAH,sDCGRO,G,KAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,kCAAKA,EAAL,YCLCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAhB,GACHc,EAAS,CACLf,KAAMC,EACNY,SAAS,SAItB,CAACpB,IAEGqB,EDbeI,CAAczB,GAA/BO,EAHgC,EAGhCA,KAAMa,EAH0B,EAG1BA,QAQb,OACE,qCACE,oBAAIJ,UAAY,oCAAhB,SAAqDhB,IAEnDoB,GAAW,mBAAGJ,UAAY,mCAAf,wBACb,qBAAKA,UAAU,YAAf,SACGT,GACCA,EAAKE,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEW1Be,EAhCM,WAAM,MAIazC,mBAAS,CAAC,SAJvB,mBAIhB0C,EAJgB,KAIJC,EAJI,KAavB,OACI,qCACI,8CACA,cAAC,EAAD,CAAa5C,cAAgB4C,IAC7B,uBAEA,6BAEQD,EAAWlB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAECA,SAAYA,GADLA,YCrBvC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.953d2e43.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    // Esta funcion es para manejar el valor del input\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setinputValue('');   \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n              <input \r\n                type = \"text\"\r\n                value = {inputValue}\r\n                placeholder = 'Category'\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\n // Esta funcion es para traer las imagenes, y luego lo convertimos a un objeto\r\n export const getGifs = async ( category ) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Jk2VUpgILUAtSVI9SAH9F1Us8uAwvXj1`;\r\n      // encodeURI reemplaza los espacios por otra cosa\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    \r\n    return gifs;\r\n    \r\n  };","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport '../index.css'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className = 'card animate__animated animate__bounce'>\r\n            <img src = {url} alt = {title}></img>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n","//import React, { useState, useEffect } from \"react\";\r\nimport React from 'react';\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n//import { getGifs } from \"./helpers/getGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  //const [images, setImages] = useState([]);\r\n\r\n  const {data, loading} = useFetchGifs( category );\r\n  //El useEffect con el parametro [], nos  llama la funcion getGifs solo una vez.\r\n  /*useEffect(() => {\r\n    getGifs( category )\r\n        .then( imgs => setImages( imgs ) );\r\n  }, [ category ]);\r\n  */\r\n\r\n  return (\r\n    <>\r\n      <h3 className = 'animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n      { loading && <p className = 'animate__animated animate__flash'>loading...</p>}\r\n      <div className=\"card-grid\">\r\n        {data &&\r\n          data.map((img) => {\r\n            return <GifGridItem key={img.id} {...img} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../components/helpers/getGifs.js'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGifs( category )\r\n            .then( gifs => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setcategories] = useState(['goku']);\r\n\r\n    /*\r\n    const handleAdd = () =>{\r\n        setcategories( [...categories, 'HunterX'] );\r\n        //setcategories( cats => [...cats,'HunterX'] );\r\n    }\r\n    */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setcategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>{\r\n                        return <GifGrid \r\n                                key = {category}\r\n                                category = {category}/>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <GifExpertApp/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}